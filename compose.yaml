version: '3.9'

services:
  articleservice:
    build:
      context: .
      dockerfile: ArticleService/Dockerfile
    ports:
      - "8080:8080"
   
 

  commentservice:
    build:
      context: .
      dockerfile: CommentService/Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - profanityservice
      - articleservice

  profanityservice:
    build:
      context: ./ProfanityService
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    
  publisherservice:
    build:
      context: .
      dockerfile: PublisherService/Dockerfile
    ports:
      - "8083:8080"
    depends_on:
      - rabbitmq
      - draftservice
    environment:
      RABBITMQ_HOST: rabbitmq

  draftservice:
    build:
      context: .
      dockerfile: DraftService/Dockerfile
    ports:
      - "8084:8080" 

  newsletterservice:
    build:
      context: .
      dockerfile: NewsletterService/Dockerfile
    ports:
      - "8085:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      articleservice:
        condition: service_started
    environment:
      RABBITMQ_HOST: rabbitmq
  
  subscriberservice:
    build:
      context: .
      dockerfile: SubscriberService/Dockerfile
    ports:
      - "8086:8080"
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s

  seq:
    image: datalust/seq:latest    
    ports:
      - "5341:5341"
      - "5342:80"
    volumes:
      - rps_seq_data:/data
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_NOAUTHENTICATION=true

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379" 
    command: ["redis-server", "--maxmemory", "100mb", "--maxmemory-policy", "allkeys-lru"]

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    command:
      - '--redis.addr=redis:6379'
    ports:
      - "9121:9121"
    depends_on:
      - redis

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
     - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - articleservice
    networks:
      - default

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - default



volumes:
  rps_seq_data:
